// DO NOT EDIT! This file generated by gen_amd64.jl
#include "textflag.h"

// func accumulateToFeet(z *[2]cvec, u *[2]u13, feet []foot)
TEXT ·accumulateToFeet(SB), NOSPLIT, $40
	MOVQ z+0(FP), BX
	MOVQ u+8(FP), SI
	MOVUPS 0(BX), X15
	MOVUPS 16(BX), X14
	MOVSS 0(SI), X13
	SHUFPS $0, X13, X13
	MOVSS 4(SI), X12
	SHUFPS $0, X12, X12
	MOVSS 8(SI), X11
	SHUFPS $0, X11, X11
	MOVSS 12(SI), X10
	SHUFPS $0, X10, X10
	MOVUPS 32(BX), X9
	MOVUPS 48(BX), X8
	MOVSS 16(SI), X7
	SHUFPS $0, X7, X7
	MOVSS 20(SI), X6
	SHUFPS $0, X6, X6
	MOVSS 24(SI), X5
	SHUFPS $0, X5, X5
	MOVSS 28(SI), X4
	SHUFPS $0, X4, X4
	MOVQ feet_base+16(FP), DI
	MOVQ feet_len+24(FP), CX

loop:
	// fac, fbc
	MOVUPS 32(DI), X3
	MOVUPS 48(DI), X2
	MOVAPS X15, X1
	MULPS X13, X1
	MOVAPS X14, X0
	MULPS X13, X0
	ADDPS X0, X2
	ADDPS X1, X3
	MOVAPS X9, X1
	MULPS X7, X1
	MOVAPS X8, X0
	MULPS X7, X0
	ADDPS X0, X2
	ADDPS X1, X3
	MOVUPS X3, 32(DI)
	MOVUPS X2, 48(DI)

	// fad, fbd
	MOVUPS 64(DI), X2
	MOVUPS 80(DI), X3
	MOVAPS X15, X1
	MULPS X12, X1
	MOVAPS X14, X0
	MULPS X12, X0
	ADDPS X0, X3
	ADDPS X1, X2
	MOVAPS X9, X1
	MULPS X6, X1
	MOVAPS X8, X0
	MULPS X6, X0
	ADDPS X0, X3
	ADDPS X1, X2
	MOVUPS X2, 64(DI)
	MOVUPS X3, 80(DI)

	// fa, fb, rotate by u
	MOVUPS 0(DI), X3
	MOVUPS 16(DI), X2
	ADDPS X15, X3
	ADDPS X14, X2
	MOVAPS X14, X1
	MULPS X10, X1
	MOVAPS X15, X0
	MULPS X10, X0
	MULPS X11, X15
	MULPS X11, X14
	SUBPS X1, X15
	ADDPS X0, X14
	ADDPS X9, X3
	ADDPS X8, X2
	MOVAPS X8, X0
	MULPS X4, X0
	MOVAPS X9, X1
	MULPS X4, X1
	MULPS X5, X9
	MULPS X5, X8
	SUBPS X0, X9
	ADDPS X1, X8
	MOVUPS X3, 0(DI)
	MOVUPS X2, 16(DI)

	ADDQ $96, DI
	SUBQ $1, CX
	JG loop
	RET

// func rotate( w []cvec, v []complex64)
TEXT ·rotate(SB), NOSPLIT, $48
	MOVQ w_base+0(FP), DI
	MOVQ w_len+8(FP), CX
	MOVQ v_base+24(FP), SI
loop:
	MOVSS 0(SI), X7
	SHUFPS $0, X7, X7
	MOVSS 4(SI), X6
	SHUFPS $0, X6, X6
	MOVUPS 0(DI), X5
	MOVUPS 16(DI), X4
	MOVAPS X4, X3
	MULPS X6, X3
	MOVAPS X5, X2
	MULPS X6, X2
	MULPS X7, X5
	MULPS X7, X4
	SUBPS X3, X5
	ADDPS X2, X4
	MOVUPS X5, 0(DI)
	MOVUPS X4, 16(DI)
	ADDQ $32, DI
	ADDQ $8, SI
	SUBQ $1, CX
	JG loop
	RET

// func feetToPixel(feet[]foot, clut*colorLookupTable, row[]pixel)
TEXT ·feetToPixel(SB), NOSPLIT, $56
	MOVQ feet+0(FP), SI
	MOVQ feet_len+8(FP), CX
	MOVQ clut+24(FP), BX
	MOVQ row+32(FP), DI
	XORPS X9, X9
	MOVSS $64.5, X8
	SHUFPS $0, X8, X8
loop:
	MOVUPS 32(SI), X7
	MOVUPS 48(SI), X6
	MOVUPS 64(SI), X5
	MOVUPS 80(SI), X4
	
	// left
	MOVAPS X6, X3
	SUBPS X5, X3
	MOVAPS X7, X2
	ADDPS X4, X2
	CVTTSS2SQ X2, AX
	SHUFPS $0x39, X2, X2
	CVTTSS2SQ X3, DX
	SHUFPS $0x39, X3, X3
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 0(DI)
	CVTTSS2SQ X2, AX
	SHUFPS $0x39, X2, X2
	CVTTSS2SQ X3, DX
	SHUFPS $0x39, X3, X3
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 4(DI)
	CVTTSS2SQ X2, AX
	SHUFPS $0x39, X2, X2
	CVTTSS2SQ X3, DX
	SHUFPS $0x39, X3, X3
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 8(DI)
	CVTTSS2SQ X2, AX
	SHUFPS $0x39, X2, X2
	CVTTSS2SQ X3, DX
	SHUFPS $0x39, X3, X3
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 12(DI)
	MOVUPS X8, 32(SI)
	MOVUPS X8, 48(SI)
	
	// middle
	MOVUPS 0(SI), X1
	MOVUPS 16(SI), X0
	CVTTSS2SQ X1, AX
	SHUFPS $0x39, X1, X1
	CVTTSS2SQ X0, DX
	SHUFPS $0x39, X0, X0
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 16(DI)
	CVTTSS2SQ X1, AX
	SHUFPS $0x39, X1, X1
	CVTTSS2SQ X0, DX
	SHUFPS $0x39, X0, X0
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 20(DI)
	CVTTSS2SQ X1, AX
	SHUFPS $0x39, X1, X1
	CVTTSS2SQ X0, DX
	SHUFPS $0x39, X0, X0
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 24(DI)
	CVTTSS2SQ X1, AX
	SHUFPS $0x39, X1, X1
	CVTTSS2SQ X0, DX
	SHUFPS $0x39, X0, X0
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 28(DI)
	MOVUPS X8, 0(SI)
	MOVUPS X8, 16(SI)
	
	// right
	ADDPS X5, X6
	SUBPS X4, X7
	CVTTSS2SQ X7, AX
	SHUFPS $0x39, X7, X7
	CVTTSS2SQ X6, DX
	SHUFPS $0x39, X6, X6
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 32(DI)
	CVTTSS2SQ X7, AX
	SHUFPS $0x39, X7, X7
	CVTTSS2SQ X6, DX
	SHUFPS $0x39, X6, X6
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 36(DI)
	CVTTSS2SQ X7, AX
	SHUFPS $0x39, X7, X7
	CVTTSS2SQ X6, DX
	SHUFPS $0x39, X6, X6
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 40(DI)
	CVTTSS2SQ X7, AX
	SHUFPS $0x39, X7, X7
	CVTTSS2SQ X6, DX
	SHUFPS $0x39, X6, X6
	SHLQ $7, DX
	ADDQ AX, DX
	MOVQ (BX)(DX*4), BP
	MOVQ BP, 44(DI)
	MOVUPS X9, 64(SI)
	MOVUPS X9, 80(SI)

	ADDQ $48, DI
	ADDQ $96, SI
	SUBQ $1, CX
	JG loop
	RET
